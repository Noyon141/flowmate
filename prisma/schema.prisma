generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique
  username  String   @unique
  fullName  String?
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workspaces  Workspace[]
  memberships Member[]
  comments    Comment[]
  mentions    Mention[]
  Task        Task[]
}

model Workspace {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ownerId String
  owner   User     @relation(fields: [ownerId], references: [id])
  members Member[]

  Task Task[]
}

model Member {
  id          String @id @default(cuid())
  role        String @default("member")
  workspaceId String
  userId      String

  workspace Workspace @relation(fields: [workspaceId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
}

model Task {
  id          String    @id @default(cuid())
  title       String
  description String?
  status      status    @default(todo)
  dueDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  workspaceId String
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  assigneeId  String?
  assignee    User?     @relation(fields: [assigneeId], references: [id])
  Comment     Comment[]
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  taskId String
  task   Task   @relation(fields: [taskId], references: [id])

  authorId String
  author   User   @relation(fields: [authorId], references: [id])

  mentions Mention[]
}

model Mention {
  id        String @id @default(cuid())
  userId    String
  commentId String

  user    User    @relation(fields: [userId], references: [id])
  comment Comment @relation(fields: [commentId], references: [id])
}

enum status {
  todo
  in_progress
  done
}
